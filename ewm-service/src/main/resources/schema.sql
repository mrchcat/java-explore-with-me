--TODO удалить DROP
DROP TABLE IF EXISTS compilation_event CASCADE;
DROP TABLE IF EXISTS compilations CASCADE;
DROP TABLE IF EXISTS events CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS categories CASCADE;


CREATE TABLE IF NOT EXISTS categories (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email varchar NOT NULL UNIQUE,
  name varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS events (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  title VARCHAR NOT NULL,
  annotation VARCHAR(200) NOT NULL,
  description VARCHAR(7000) NOT NULL,
  category_id BIGINT NOT NULL,
  event_date TIMESTAMP NOT NULL,
  latitude NUMERIC(9,6),
  longitude NUMERIC(9,6),
  paid BOOL,
  participant_limit BIGINT,
  request_moderation BOOL,
  initiator_id BIGINT NOT NULL,
  created_on TIMESTAMP NOT NULL,
  published_on TIMESTAMP,
  state VARCHAR NOT NULL,
  CONSTRAINT fk_events_category_id FOREIGN KEY (category_id) REFERENCES categories(id) ON DELETE RESTRICT,
  CONSTRAINT fk_events_initiator_id FOREIGN KEY (initiator_id) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS compilations (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  title varchar(50) NOT NULL,
  pinned bool NOT NULL
);

CREATE TABLE IF NOT EXISTS compilation_event (
  compilation_id bigint,
  event_id bigint,
  PRIMARY KEY (compilation_id, event_id),
  CONSTRAINT fk_foreign_compilation_id FOREIGN KEY (compilation_id) REFERENCES compilations(id),
  CONSTRAINT fk_foreign_event_id FOREIGN KEY (event_id) REFERENCES events (id)
);

CREATE INDEX IF NOT EXISTS idx_categories_name ON categories(name);
CREATE INDEX IF NOT EXISTS idx_users_name ON users(email);
CREATE INDEX IF NOT EXISTS idx_events ON events(annotation,description,category_id,paid,event_date,
participant_limit,state,initiator_id);



