CREATE TABLE IF NOT EXISTS categories (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email varchar(254) NOT NULL UNIQUE,
  name varchar(250) NOT NULL
);

CREATE TABLE IF NOT EXISTS events (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  title VARCHAR(120) NOT NULL,
  annotation VARCHAR(2000) NOT NULL,
  description VARCHAR(7000) NOT NULL,
  category_id BIGINT NOT NULL,
  event_date TIMESTAMP NOT NULL,
  latitude NUMERIC(9,6),
  longitude NUMERIC(9,6),
  paid BOOL,
  participant_limit INT,
  request_moderation BOOL,
  initiator_id BIGINT,
  created_on TIMESTAMP NOT NULL,
  published_on TIMESTAMP,
  state VARCHAR NOT NULL,
  CONSTRAINT FK_EVENTS_CATEGORY_ID FOREIGN KEY (category_id) REFERENCES categories(id) ON DELETE RESTRICT,
  CONSTRAINT FK_EVENTS_INITIATOR_ID FOREIGN KEY (initiator_id) REFERENCES users(id) ON DELETE CASCADE,
  CONSTRAINT CHECK_EVENTS_PARTICIPANT_LIMIT CHECK (participant_limit >= 0)
);

CREATE TABLE IF NOT EXISTS compilations (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  title varchar(50) NOT NULL,
  pinned bool NOT NULL
);

CREATE TABLE IF NOT EXISTS compilation_event (
  compilation_id bigint,
  event_id bigint,
  PRIMARY KEY (compilation_id, event_id),
  CONSTRAINT FK_FOREIGN_COMPILATION_ID FOREIGN KEY (compilation_id) REFERENCES compilations(id),
  CONSTRAINT FK_FOREIGN_EVENT_ID FOREIGN KEY (event_id) REFERENCES events (id)
);

CREATE TABLE requests (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  requester_id bigint NOT NULL,
  event_id bigint NOT NULL,
  created timestamp NOT NULL,
  status varchar(100) NOT NULL,
  CONSTRAINT FK_REQUESTS_REQUESTER_ID FOREIGN KEY (requester_id) REFERENCES users(id) ON DELETE CASCADE,
  CONSTRAINT FK_REQUESTS_EVENT_ID FOREIGN KEY (event_id) REFERENCES events(id) ON DELETE CASCADE
);

CREATE INDEX IF NOT EXISTS IDX_CATEGORIES_NAME ON categories(name);
CREATE INDEX IF NOT EXISTS IDX_USERS_NAME ON users(email);
CREATE INDEX IF NOT EXISTS IDX_EVENTS ON events(category_id,paid,event_date, participant_limit,state,initiator_id);
CREATE INDEX IF NOT EXISTS IDX_REQUESTS ON requests(id, requester_id,event_id);


